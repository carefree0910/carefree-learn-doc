(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{109:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return j}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var o=i.a.createContext({}),m=function(e){var t=i.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=m(e.components);return i.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},O=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),s=m(a),O=n,j=s["".concat(l,".").concat(O)]||s[O]||p[O]||r;return a?i.a.createElement(j,c(c({ref:t},o),{},{components:a})):i.a.createElement(j,c({ref:t},o))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=O;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var o=2;o<r;o++)l[o]=a[o];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},110:function(e,t,a){"use strict";function n(e){var t,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=" "),i+=a);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}},114:function(e,t,a){"use strict";var n=a(0),i=a(115);t.a=function(){var e=Object(n.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},115:function(e,t,a){"use strict";var n=a(0),i=Object(n.createContext)(void 0);t.a=i},117:function(e,t,a){"use strict";var n=a(0),i=a.n(n),r=a(114),l=a(110),c=a(52),b=a.n(c),o=37,m=39;t.a=function(e){var t=e.lazy,a=e.block,c=e.children,s=e.defaultValue,p=e.values,O=e.groupId,j=e.className,u=Object(r.a)(),d=u.tabGroupChoices,N=u.setTabGroupChoices,f=Object(n.useState)(s),h=f[0],g=f[1];if(null!=O){var _=d[O];null!=_&&_!==h&&p.some((function(e){return e.value===_}))&&g(_)}var w=function(e){g(e),null!=O&&N(O,e)},C=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":a},j)},p.map((function(e){var t=e.value,a=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(l.a)("tabs__item",b.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case m:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case o:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(C,e.target,e)},onFocus:function(){return w(t)},onClick:function(){w(t)}},a)}))),t?Object(n.cloneElement)(c.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},c.map((function(e,t){return Object(n.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},118:function(e,t,a){"use strict";var n=a(3),i=a(0),r=a.n(i);t.a=function(e){var t=e.children,a=e.hidden,i=e.className;return r.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:a,className:i}),t)}},98:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return m})),a.d(t,"default",(function(){return p}));var n=a(3),i=a(7),r=(a(0),a(109)),l=a(117),c=a(118),b={id:"configurations",title:"Configurations"},o={unversionedId:"getting-started/configurations",id:"getting-started/configurations",isDocsHomePage:!1,title:"Configurations",description:"Although it is possible to get a rather good performance with default configurations, performance might be gained easily by specifying configurations with our prior knowledges.",source:"@site/docs/getting-started/configurations.md",slug:"/getting-started/configurations",permalink:"/carefree-learn-doc/docs/getting-started/configurations",version:"current",lastUpdatedAt:1633959376,sidebar:"docs",previous:{title:"Quick Start",permalink:"/carefree-learn-doc/docs/getting-started/quick-start"},next:{title:"Iris",permalink:"/carefree-learn-doc/docs/examples/Iris"}},m=[{value:"Specify Configurations",id:"specify-configurations",children:[{value:"Configure from Scratch",id:"configure-from-scratch",children:[]},{value:"Configure <code>DLZoo</code>",id:"configure-dlzoo",children:[]},{value:"Configure <code>cflearn.api</code>",id:"configure-cflearnapi",children:[]}]},{value:"Configuration Details",id:"configuration-details",children:[{value:"<code>make_multiple</code> mechanism",id:"make_multiple-mechanism",children:[]},{value:"<code>TrainerState</code>",id:"trainerstate",children:[]},{value:"<code>BasicMonitor</code>",id:"basicmonitor",children:[]},{value:"<code>_LogMetricsMsgCallback</code>",id:"_logmetricsmsgcallback",children:[]},{value:"<code>OptimizerPack</code>",id:"optimizerpack",children:[]},{value:"<code>finetune_config</code>",id:"finetune_config",children:[]},{value:"<code>TqdmSettings</code>",id:"tqdmsettings",children:[]}]}],s={rightToc:m};function p(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Although it is possible to get a rather good performance with default configurations, performance might be gained easily by specifying configurations with our prior knowledges."),Object(r.b)("p",null,"We've already mentioned the basic ideas on how to configure ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," in ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../#configurations"}),Object(r.b)("inlineCode",{parentName:"a"},"Introduction")),", so we will focus on introducing how to actually configure ",Object(r.b)("inlineCode",{parentName:"p"},"Pipeline"),"s in this page. "),Object(r.b)("h2",{id:"specify-configurations"},"Specify Configurations"),Object(r.b)("p",null,"There are three ways to specify configurations in ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),":"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Construct a ",Object(r.b)("inlineCode",{parentName:"li"},"Pipeline")," from scratch."),Object(r.b)("li",{parentName:"ul"},"Leverage ",Object(r.b)("inlineCode",{parentName:"li"},"DLZoo")," to construct a ",Object(r.b)("inlineCode",{parentName:"li"},"Pipeline")," with a JSON file."),Object(r.b)("li",{parentName:"ul"},"Utilize ",Object(r.b)("inlineCode",{parentName:"li"},"cflearn.api")," (",Object(r.b)("strong",{parentName:"li"},"recommended!"),").")),Object(r.b)("p",null,"Let's say we want to construct a ",Object(r.b)("inlineCode",{parentName:"p"},"Pipeline")," to train ",Object(r.b)("inlineCode",{parentName:"p"},"resnet18")," on MNIST dataset, here are three different ways to achieve this:"),Object(r.b)(l.a,{defaultValue:"scratch",values:[{label:"From Scratch",value:"scratch"},{label:"DLZoo",value:"zoo"},{label:"cflearn.api",value:"api"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"scratch",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.cv.CarefreePipeline(\n    "clf",\n    {\n        "in_channels": 1,\n        "num_classes": 10,\n        "latent_dim": 512,\n        "encoder1d": "backbone",\n        "encoder1d_config": {\n            "name": "resnet18",\n            "pretrained": False,\n        },\n    },\n    loss_name="cross_entropy",\n    metric_names="acc",\n)\n'))),Object(r.b)(c.a,{value:"zoo",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.DLZoo.load_pipeline("clf/resnet18.gray", num_classes=10)\n'))),Object(r.b)(c.a,{value:"api",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"m = cflearn.api.resnet18_gray(10)\n")))),Object(r.b)("p",null,"We'll describe some details in the following sections."),Object(r.b)("h3",{id:"configure-from-scratch"},"Configure from Scratch"),Object(r.b)("p",null,"Since ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," exposed almost every parameter to users, we can actually control every part of the ",Object(r.b)("inlineCode",{parentName:"p"},"Pipeline")," through args and kwargs of ",Object(r.b)("inlineCode",{parentName:"p"},"__init__"),"."),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Although Machine Learning, Computer Vision and Natural Language Processing are very different, they share many things in common when they are solved by Deep Learning. Therefore in ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", we implement ",Object(r.b)("inlineCode",{parentName:"p"},"DLPipeline")," to handle these shared stuffs."))),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'class DLPipeline(PipelineProtocol, metaclass=ABCMeta):\n    def __init__(\n        self,\n        *,\n        loss_name: str,\n        loss_config: Optional[Dict[str, Any]] = None,\n        # trainer\n        state_config: Optional[Dict[str, Any]] = None,\n        num_epoch: int = 40,\n        max_epoch: int = 1000,\n        fixed_epoch: Optional[int] = None,\n        fixed_steps: Optional[int] = None,\n        log_steps: Optional[int] = None,\n        valid_portion: float = 1.0,\n        amp: bool = False,\n        clip_norm: float = 0.0,\n        cudnn_benchmark: bool = False,\n        metric_names: Optional[Union[str, List[str]]] = None,\n        metric_configs: Optional[Dict[str, Any]] = None,\n        use_losses_as_metrics: Optional[bool] = None,\n        loss_metrics_weights: Optional[Dict[str, float]] = None,\n        recompute_train_losses_in_eval: bool = True,\n        monitor_names: Optional[Union[str, List[str]]] = None,\n        monitor_configs: Optional[Dict[str, Any]] = None,\n        callback_names: Optional[Union[str, List[str]]] = None,\n        callback_configs: Optional[Dict[str, Any]] = None,\n        lr: Optional[float] = None,\n        optimizer_name: Optional[str] = None,\n        scheduler_name: Optional[str] = None,\n        optimizer_config: Optional[Dict[str, Any]] = None,\n        scheduler_config: Optional[Dict[str, Any]] = None,\n        optimizer_settings: Optional[Dict[str, Dict[str, Any]]] = None,\n        workplace: str = "_logs",\n        finetune_config: Optional[Dict[str, Any]] = None,\n        tqdm_settings: Optional[Dict[str, Any]] = None,\n        # misc\n        in_loading: bool = False,\n    )\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"loss_name")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Loss that we'll use for training."),Object(r.b)("li",{parentName:"ul"},"Currently ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," supports",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Common losses: ",Object(r.b)("inlineCode",{parentName:"li"},"mae"),", ",Object(r.b)("inlineCode",{parentName:"li"},"mse"),", ",Object(r.b)("inlineCode",{parentName:"li"},"quantile"),", ",Object(r.b)("inlineCode",{parentName:"li"},"cross_entropy"),", ",Object(r.b)("inlineCode",{parentName:"li"},"focal"),", ..."),Object(r.b)("li",{parentName:"ul"},"Task specific losses: ",Object(r.b)("inlineCode",{parentName:"li"},"vae"),", ",Object(r.b)("inlineCode",{parentName:"li"},"vqvae"),", ..."))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"loss_config"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Configurations of the corresponding loss."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"state_config"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Configurations of the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#trainerstate"}),Object(r.b)("inlineCode",{parentName:"a"},"TrainerState")),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"num_epoch"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"40"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify number of epochs. "),Object(r.b)("li",{parentName:"ul"},"Notice that in most cases this will not be the final epoch number."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"max_epoch"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"1000"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the maximum number of epochs."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"fixed_epoch"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the (fixed) number of epochs."),Object(r.b)("li",{parentName:"ul"},"If sepcified, then ",Object(r.b)("inlineCode",{parentName:"li"},"num_epoch")," and ",Object(r.b)("inlineCode",{parentName:"li"},"max_epoch")," will all be set to it."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"fixed_steps"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the (fixed) number of steps."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"log_steps"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the (fixed) number of steps to do loggings."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"valid_portion"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"1.0"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify how much data from validation set do we want to use for monitoring."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"amp"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"False"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify whether use the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://pytorch.org/docs/stable/amp.html"}),Object(r.b)("inlineCode",{parentName:"a"},"amp"))," technique or not."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"clip_norm"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"0.0"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Given a gradient ",Object(r.b)("inlineCode",{parentName:"li"},"g"),", and the ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"clip_norm"))," value, we will normalize ",Object(r.b)("inlineCode",{parentName:"li"},"g")," so that its L2-norm is less than or equal to ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"clip_norm")),"."),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},"0.0"),", then no gradient clip will be performed."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"cudnn_benchmark"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"False"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify whether use the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://pytorch.org/docs/stable/backends.html"}),Object(r.b)("inlineCode",{parentName:"a"},"cudnn.benchmark"))," technique or not."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"metric_names"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify what metrics do we want to use for monitoring."),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},"None"),", then no metrics will be used, and losses will be treated as metrics."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"metric_configs"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Configurations of the corresponding metrics."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"use_losses_as_metrics"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify whether use losses as metrics or not."),Object(r.b)("li",{parentName:"ul"},"It will always be ",Object(r.b)("inlineCode",{parentName:"li"},"True")," if ",Object(r.b)("inlineCode",{parentName:"li"},"metric_names")," is ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"loss_metrics_weights"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the weight of each loss when they are used as metrics."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"recompute_train_losses_in_eval"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"True"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify whether should we recompute losses on training set in monitor steps when validation set is not provided."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"monitor_names"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify what monitors do we want to use for monitoring."),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},"None"),", then ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#basicmonitor"}),Object(r.b)("inlineCode",{parentName:"a"},"BasicMonitor"))," will be used."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"monitor_configs"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Configurations of the corresponding monitors."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"callback_names"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify what callbacks do we want to use during training."),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},"None"),", then ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#_logmetricsmsgcallback"}),Object(r.b)("inlineCode",{parentName:"a"},"_LogMetricsMsgCallback"))," will be used."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"callback_configs"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Configurations of the corresponding callbacks."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"lr"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Default learning rate."),Object(r.b)("li",{parentName:"ul"},"If not specified, ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," will try to infer the best default value."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"optimizer_name"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},'"None"'),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify which optimizer will be used."),Object(r.b)("li",{parentName:"ul"},"If not specified, ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," will try to infer the best default value."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"scheduler_name"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},'"None"'),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify which learning rate scheduler will be used."),Object(r.b)("li",{parentName:"ul"},"If not specified, ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," will try to infer the best default value."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"optimizer_config"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the optimizer's configuration."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"scheduler_config"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the scheduler's configuration."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"optimizer_settings"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the fine grained configurations of optimizers and schedulers."),Object(r.b)("li",{parentName:"ul"},"We should not specify ",Object(r.b)("inlineCode",{parentName:"li"},"optimizer_name"),", ... if we want to specify ",Object(r.b)("inlineCode",{parentName:"li"},"optimizer_settings"),"."),Object(r.b)("li",{parentName:"ul"},"See ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#optimizerpack"}),Object(r.b)("inlineCode",{parentName:"a"},"OptimizerPack"))," for more details."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"workplace"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},'"_logs"'),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the workplace of the whole training process."),Object(r.b)("li",{parentName:"ul"},"In general, ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," will create a folder (with timestamp as its name) in the workplace, and will dump everything generated in the training process to it."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"finetune_config"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the finetune configurations."),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},"None"),", then we'll not utilize the finetune mechanism supported by ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn"),"."),Object(r.b)("li",{parentName:"ul"},"See ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#finetune_config"}),Object(r.b)("inlineCode",{parentName:"a"},"finetune_config"))," for more details."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"tqdm_settings"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the ",Object(r.b)("inlineCode",{parentName:"li"},"tqdm")," configurations."),Object(r.b)("li",{parentName:"ul"},"See ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#tqdmsettings"}),Object(r.b)("inlineCode",{parentName:"a"},"TqdmSettings"))," for more details."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"in_loading"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"False"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"In most cases this is an internal property handled by ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," itself.")))),Object(r.b)("h3",{id:"configure-dlzoo"},"Configure ",Object(r.b)("inlineCode",{parentName:"h3"},"DLZoo")),Object(r.b)("p",null,"Since it will be tedious to re-define similar configurations over and over, ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," provides ",Object(r.b)("inlineCode",{parentName:"p"},"DLZoo")," to improve user experience. Internally, ",Object(r.b)("inlineCode",{parentName:"p"},"DLZoo")," will read configurations from ",Object(r.b)("inlineCode",{parentName:"p"},"cflearn/api/zoo/configs"),", which contains a bunch of JSON files:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'# This will read the  cflearn/api/zoo/configs/clf/resnet18/default.json  file\nm = cflearn.DLZoo.load_pipeline("clf/resnet18", num_classes=10)\n# This will read the  cflearn/api/zoo/configs/clf/resnet18/gray.json     file\nm = cflearn.DLZoo.load_pipeline("clf/resnet18.gray", num_classes=10)\n')),Object(r.b)("h3",{id:"configure-cflearnapi"},"Configure ",Object(r.b)("inlineCode",{parentName:"h3"},"cflearn.api")),Object(r.b)("p",null,"Since ",Object(r.b)("inlineCode",{parentName:"p"},"DLZoo")," mainly depends on JSON files which cannot provide useful auto-completion, ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," further provides ",Object(r.b)("inlineCode",{parentName:"p"},"cflearn.api"),", which is a thin wrapper of ",Object(r.b)("inlineCode",{parentName:"p"},"DLZoo"),", as the recommended user interface."),Object(r.b)("p",null,"Configuring ",Object(r.b)("inlineCode",{parentName:"p"},"cflearn.api")," will be exactly the same as configuring ",Object(r.b)("inlineCode",{parentName:"p"},"DLZoo"),", except that it can utilize auto-completion which significantly improves user experience."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.api.resnet18_gray(10, metric_names="acc")\n')),Object(r.b)("h2",{id:"configuration-details"},"Configuration Details"),Object(r.b)("h3",{id:"make_multiple-mechanism"},Object(r.b)("inlineCode",{parentName:"h3"},"make_multiple")," mechanism"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"This mechanism is based on the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../design-principles#register-mechanism"}),Object(r.b)("inlineCode",{parentName:"a"},"Register Mechanism")),".")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"make_multiple")," mechanism is useful when we need to use either one single instance or multiple instances (e.g. use one metric / use multiple metrics to monitor the training process):"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"When we need one single instance, only one single name (",Object(r.b)("inlineCode",{parentName:"li"},"str"),") and the corresponding config is required."),Object(r.b)("li",{parentName:"ul"},"When we need multiple instances, their names (",Object(r.b)("inlineCode",{parentName:"li"},"List[str]"),") are required, and the configs should be a dictionary, where:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"The keys should be the names."),Object(r.b)("li",{parentName:"ul"},"The values should be the corresponding configs.")))),Object(r.b)("p",null,"The source codes well demonstrate how it works:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"@classmethod\ndef make_multiple(\n    cls,\n    names: Union[str, List[str]],\n    configs: configs_type = None,\n) -> Union[T, List[T]]:\n    if configs is None:\n        configs = {}\n    if isinstance(names, str):\n        assert isinstance(configs, dict)\n        return cls.make(names, configs)  # type: ignore\n    if not isinstance(configs, list):\n        configs = [configs.get(name, {}) for name in names]\n    return [\n        cls.make(name, shallow_copy_dict(config))\n        for name, config in zip(names, configs)\n    ]\n")),Object(r.b)("h3",{id:"trainerstate"},Object(r.b)("inlineCode",{parentName:"h3"},"TrainerState")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"class TrainerState:\n    def __init__(\n        self,\n        loader: DataLoaderProtocol,\n        *,\n        num_epoch: int,\n        max_epoch: int,\n        fixed_steps: Optional[int] = None,\n        extension: int = 5,\n        enable_logging: bool = True,\n        min_num_sample: int = 3000,\n        snapshot_start_step: Optional[int] = None,\n        max_snapshot_file: int = 5,\n        num_snapshot_per_epoch: int = 2,\n        num_step_per_log: int = 350,\n        num_step_per_snapshot: Optional[int] = None,\n        max_step_per_snapshot: int = 1000,\n    )\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"loader")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"This will be handled by ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," internally."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"num_epoch")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify number of epochs. "),Object(r.b)("li",{parentName:"ul"},"Notice that in most cases this will not be the final epoch number."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"max_epoch")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the maximum number of epochs."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"fixed_steps"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the (fixed) number of steps."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"extension"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the number of the extended epochs per extension."),Object(r.b)("li",{parentName:"ul"},"So basically, we'll not extend the epoch for more than ",Object(r.b)("span",Object(n.a)({parentName:"li"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("mfrac",{parentName:"mrow"},Object(r.b)("mrow",{parentName:"mfrac"},Object(r.b)("mrow",{parentName:"mrow"},Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"m"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"a"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"x"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"_"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"e"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"p"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"o"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"c"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"h")),Object(r.b)("mo",{parentName:"mrow"},"\u2212"),Object(r.b)("mrow",{parentName:"mrow"},Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"n"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"u"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"m"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"_"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"e"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"p"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"o"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"c"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"h"))),Object(r.b)("mrow",{parentName:"mfrac"},Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"e"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"x"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"t"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"e"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"n"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"s"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"i"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"o"),Object(r.b)("mi",Object(n.a)({parentName:"mrow"},{mathvariant:"normal"}),"n")))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"\\frac{\\mathrm{max\\_epoch}-\\mathrm{num\\_epoch}}{\\mathrm{extension}}")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"1.3581079999999999em",verticalAlign:"-0.345em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mopen nulldelimiter"})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mfrac"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t vlist-t2"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"1.013108em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-2.6550000000000002em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"e"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"x"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"t"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"e"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"n"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"s"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"i"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"o"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"n"))))),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.23em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"frac-line",style:{borderBottomWidth:"0.04em"}}))),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-3.527em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"3em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"m"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"a"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"x"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight",style:{marginRight:"0.02778em"}}),"_"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"e"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"p"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"o"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"c"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"h")),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mbin mtight"}),"\u2212"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"n"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"u"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"m"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight",style:{marginRight:"0.02778em"}}),"_"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"e"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"p"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"o"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"c"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathrm mtight"}),"h")))))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-s"}),"\u200b")),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.345em"}}),Object(r.b)("span",{parentName:"span"}))))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mclose nulldelimiter"})))))))," times."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"enable_logging"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"True"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Whether enable logging stuffs or not."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"min_num_sample"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"3000"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"We'll not start monitoring until the model has already seen ",Object(r.b)("inlineCode",{parentName:"li"},"min_num_sample")," samples."),Object(r.b)("li",{parentName:"ul"},"This can avoid monitors from stopping too early, when the model is still trying to optimize its initial state."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"snapshot_start_step"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the number of steps when we start to take snapshots."),Object(r.b)("li",{parentName:"ul"},"If not specified, ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," will try to infer the best default value."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"max_snapshot_file"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"5"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the maximum number of checkpoint files we could save during training."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"num_snapshot_per_epoch"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"2"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Indicates how many snapshots we would like to take per epoch."),Object(r.b)("li",{parentName:"ul"},"The final behaviour will be affected by ",Object(r.b)("inlineCode",{parentName:"li"},"max_step_per_snapshot"),"."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"num_step_per_log"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"350"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Indicates the number of steps of each logging period."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"num_step_per_snapshot"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"None"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the number of steps of each snapshot period."),Object(r.b)("li",{parentName:"ul"},"If not specified, ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," will try to infer the best default value."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"max_step_per_snapshot"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"1000"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the maximum number of steps of each snapshot period.")))),Object(r.b)("h3",{id:"basicmonitor"},Object(r.b)("inlineCode",{parentName:"h3"},"BasicMonitor")),Object(r.b)("p",null,"This is the default monitor of ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),". It's fairly simple, but quite useful in practice:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It will take a snapshot when SOTA is achieved."),Object(r.b)("li",{parentName:"ul"},"It will terminate the training after ",Object(r.b)("inlineCode",{parentName:"li"},"patience")," steps, if the new score is even worse than the worst score."),Object(r.b)("li",{parentName:"ul"},"It will not punish extension")),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"So in most cases, ",Object(r.b)("inlineCode",{parentName:"p"},"BasicMonitor")," will not early-stop until ",Object(r.b)("inlineCode",{parentName:"p"},"max_epoch")," is reached."))),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'@TrainerMonitor.register("basic")\nclass BasicMonitor(TrainerMonitor):\n    def __init__(self, patience: int = 25):\n        super().__init__()\n        self.patience = patience\n        self.num_snapshot = 0\n        self.best_score = -math.inf\n        self.worst_score: Optional[float] = None\n\n    def snapshot(self, new_score: float) -> bool:\n        self.num_snapshot += 1\n        if self.worst_score is None:\n            self.worst_score = new_score\n        else:\n            self.worst_score = min(new_score, self.worst_score)\n        if new_score > self.best_score:\n            self.best_score = new_score\n            return True\n        return False\n\n    def check_terminate(self, new_score: float) -> bool:\n        if self.num_snapshot <= self.patience:\n            return False\n        if self.worst_score is None:\n            return False\n        return new_score <= self.worst_score\n\n    def punish_extension(self) -> None:\n        return None\n')),Object(r.b)("h3",{id:"_logmetricsmsgcallback"},Object(r.b)("inlineCode",{parentName:"h3"},"_LogMetricsMsgCallback")),Object(r.b)("p",null,"This is the default callback of ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),". It will report the validation metrics to the console periodically, along with the current steps / epochs, and the execution time since last report. It will also write these information to disk."),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"When writing to disk, ",Object(r.b)("inlineCode",{parentName:"p"},"_LogMetricsMsgCallback")," will also write the ",Object(r.b)("inlineCode",{parentName:"p"},"lr")," (learning rate) of the corresponding steps."))),Object(r.b)("h3",{id:"optimizerpack"},Object(r.b)("inlineCode",{parentName:"h3"},"OptimizerPack")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"class OptimizerPack(NamedTuple):\n    scope: str\n    optimizer_name: str\n    scheduler_name: Optional[str] = None\n    optimizer_config: Optional[Dict[str, Any]] = None\n    scheduler_config: Optional[Dict[str, Any]] = None\n")),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"scope")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify the parameter 'scope' of this pack."),Object(r.b)("li",{parentName:"ul"},"If ",Object(r.b)("inlineCode",{parentName:"li"},'scope="all"'),", all trainable parameters will be considered."),Object(r.b)("li",{parentName:"ul"},"Else, it represents the attribute of the model, and:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"If this attribute is an ",Object(r.b)("inlineCode",{parentName:"li"},"nn.Module"),", then its parameters will be considered."),Object(r.b)("li",{parentName:"ul"},"Else, this attribute should be a list of parameters, which will be considered."))))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"optimizer_name")),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify which optimizer will be used."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"scheduler_name"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},'"None"'),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify which learning rate scheduler will be used."),Object(r.b)("li",{parentName:"ul"},"If not specified, no scheduler will be used."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"optimizer_config"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify optimizer's configuration."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"scheduler_config"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"{}"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Specify scheduler's configuration.")))),Object(r.b)("p",null,"Since directly constructing ",Object(r.b)("inlineCode",{parentName:"p"},"OptimizerPack"),"s will be troublesome, ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," provides many convenient interface for users to specify optimizer settings. For instance, these configurations will have same effects:"),Object(r.b)(l.a,{defaultValue:"kwargs",values:[{label:"Via `kwargs`",value:"kwargs"},{label:"Via `optimizer_settings`",value:"settings"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"kwargs",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.cv.CarefreePipeline(\n    ...,\n    lr=1.0e-3,\n    optimizer_name="adamw",\n    scheduler_name="plateau",\n    optimizer_config={"weight_decay": 1.0e-3},\n)\n'))),Object(r.b)(c.a,{value:"settings",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.cv.CarefreePipeline(\n    ...,\n    optimizer_settings={\n        "all": dict(\n            optimizer_name="adamw",\n            scheduler_name="plateau",\n            optimizer_config={"lr": 1.0e-3, "weight_decay": 1.0e-3},\n        ),\n    },\n)\n')))),Object(r.b)("p",null,"If we need to apply different optimizers on different parameters (which is quite common in GANs), we need to walk through the following two steps:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Define a ",Object(r.b)("inlineCode",{parentName:"li"},"property")," in your ",Object(r.b)("inlineCode",{parentName:"li"},"Model")," which returns a list of parameters you want to optimize."),Object(r.b)("li",{parentName:"ul"},"Define the corresponding optimizer configs with ",Object(r.b)("inlineCode",{parentName:"li"},"property"),"'s name as the dictionary key.")),Object(r.b)("p",null,"Here's an example:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'import cflearn\n\n@cflearn.register_model("foo")\nclass Foo(cflearn.ModelBase):\n    @property\n    def params1(self):\n        return [self.p1, self.p2, ...]\n    \n    @property\n    def params2(self):\n        return [self.p1, self.p3, ...]\n')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.cv.CarefreePipeline(\n    ...,\n    optimizer_settings={\n        "params1": {\n            "optimizer": "adam",\n            "optimizer_config": {"lr": 3.0e-4},\n            "scheduler": None,\n        },\n        "params2": {\n            "optimizer": "nag",\n            "optimizer_config": {"lr": 1.0e-3, "momentum": 0.9},\n            "scheduler": "plateau",\n            "scheduler_config": {"mode": "max", ...},\n        },\n    },\n)\n')),Object(r.b)("h3",{id:"finetune_config"},Object(r.b)("inlineCode",{parentName:"h3"},"finetune_config")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Source code: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/carefree0910/carefree-learn/blob/d039183c803f23266101b65c3863528e97940bc8/cflearn/trainer.py#L435"}),Object(r.b)("inlineCode",{parentName:"a"},"_init_finetune")),".")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," supports finetune mechanism, and we can specify:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The initial states we want to start training from."),Object(r.b)("li",{parentName:"ul"},"What parameters should we freeze / train during the finetune process, and Regex is supported!")),Object(r.b)("h4",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.api.u2net(\n    ...,\n    finetune_config={\n        "pretrained_ckpt": "/path/to/your/pretrained.pt",\n        # We\'ll freeze the parameters whose name follows the regex expression\n        "freeze": "some.regex.expression",\n        # We\'ll freeze the parameters whose name doesn\'t follow the regex expression\n        "freeze_except": "some.regex.expression",\n    },\n)\n')),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},Object(r.b)("inlineCode",{parentName:"p"},"freeze")," & ",Object(r.b)("inlineCode",{parentName:"p"},"freeze_except")," should not be provided simultaneously"))),Object(r.b)("h3",{id:"tqdmsettings"},Object(r.b)("inlineCode",{parentName:"h3"},"TqdmSettings")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'class TqdmSettings(NamedTuple):\n    use_tqdm: bool = False\n    use_step_tqdm: bool = False\n    use_tqdm_in_validation: bool = False\n    in_distributed: bool = False\n    position: int = 0\n    desc: str = "epoch"\n')),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"use_tqdm"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"False"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Whether enable ",Object(r.b)("inlineCode",{parentName:"li"},"tqdm")," progress bar or not."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"use_step_tqdm"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"False"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Whether enable ",Object(r.b)("inlineCode",{parentName:"li"},"tqdm")," progress bar on steps or not."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"use_tqdm_in_validation"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"False"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Whether enable ",Object(r.b)("inlineCode",{parentName:"li"},"tqdm")," progress bar in validation procedure or not."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"in_distributed"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"False"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"This will be handled by ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," internally."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"position"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},"0"),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"This will be handled by ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," internally."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},Object(r.b)("inlineCode",{parentName:"strong"},"desc"))," ","[default = ",Object(r.b)("inlineCode",{parentName:"li"},'"epoch"'),"]",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"This will be handled by ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," internally.")))))}p.isMDXComponent=!0}}]);