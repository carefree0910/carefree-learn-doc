(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{106:function(e,a,t){"use strict";t.d(a,"a",(function(){return p})),t.d(a,"b",(function(){return O}));var n=t(0),i=t.n(n);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function c(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function b(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?c(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),o=function(e){var a=i.a.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):b(b({},a),e)),t},p=function(e){var a=o(e.components);return i.a.createElement(l.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return i.a.createElement(i.a.Fragment,{},a)}},d=i.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=o(t),d=n,O=p["".concat(c,".").concat(d)]||p[d]||m[d]||r;return t?i.a.createElement(O,b(b({ref:a},l),{},{components:t})):i.a.createElement(O,b({ref:a},l))}));function O(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,c=new Array(r);c[0]=d;var b={};for(var s in a)hasOwnProperty.call(a,s)&&(b[s]=a[s]);b.originalType=e,b.mdxType="string"==typeof e?e:n,c[1]=b;for(var l=2;l<r;l++)c[l]=t[l];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},107:function(e,a,t){"use strict";function n(e){var a,t,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(a=0;a<e.length;a++)e[a]&&(t=n(e[a]))&&(i&&(i+=" "),i+=t);else for(a in e)e[a]&&(i&&(i+=" "),i+=a);return i}a.a=function(){for(var e,a,t=0,i="";t<arguments.length;)(e=arguments[t++])&&(a=n(e))&&(i&&(i+=" "),i+=a);return i}},111:function(e,a,t){"use strict";var n=t(0),i=t(112);a.a=function(){var e=Object(n.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},112:function(e,a,t){"use strict";var n=t(0),i=Object(n.createContext)(void 0);a.a=i},114:function(e,a,t){"use strict";var n=t(0),i=t.n(n),r=t(111),c=t(107),b=t(52),s=t.n(b),l=37,o=39;a.a=function(e){var a=e.lazy,t=e.block,b=e.children,p=e.defaultValue,m=e.values,d=e.groupId,O=e.className,j=Object(r.a)(),N=j.tabGroupChoices,u=j.setTabGroupChoices,h=Object(n.useState)(p),f=h[0],g=h[1];if(null!=d){var v=N[d];null!=v&&v!==f&&m.some((function(e){return e.value===v}))&&g(v)}var w=function(e){g(e),null!=d&&u(d,e)},C=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":t},O)},m.map((function(e){var a=e.value,t=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":f===a,className:Object(c.a)("tabs__item",s.a.tabItem,{"tabs__item--active":f===a}),key:a,ref:function(e){return C.push(e)},onKeyDown:function(e){!function(e,a,t){switch(t.keyCode){case o:!function(e,a){var t=e.indexOf(a)+1;e[t]?e[t].focus():e[0].focus()}(e,a);break;case l:!function(e,a){var t=e.indexOf(a)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,a)}}(C,e.target,e)},onFocus:function(){return w(a)},onClick:function(){w(a)}},t)}))),a?Object(n.cloneElement)(b.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},b.map((function(e,a){return Object(n.cloneElement)(e,{key:a,hidden:e.props.value!==f})}))))}},115:function(e,a,t){"use strict";var n=t(3),i=t(0),r=t.n(i);a.a=function(e){var a=e.children,t=e.hidden,i=e.className;return r.a.createElement("div",Object(n.a)({role:"tabpanel"},{hidden:t,className:i}),a)}},130:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/images/pipe-6659ec015a73ac027c5b2a8bdb83360e.png"},141:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/files/wnd-4e1ee65b2afbb8e733be7f478e81019a.png"},142:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/images/wnd-4e1ee65b2afbb8e733be7f478e81019a.png"},154:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/files/pipe-6659ec015a73ac027c5b2a8bdb83360e.png"},172:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/files/linear-b42acb06079054b90afe97297ea93a60.png"},173:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/images/linear-b42acb06079054b90afe97297ea93a60.png"},174:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/files/fcnn-e5968a4991dc4ccf02bf8e12c40bd1cf.png"},175:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/images/fcnn-e5968a4991dc4ccf02bf8e12c40bd1cf.png"},176:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/files/rnn-819b81cf9c86fc81270ede998895f8f0.png"},177:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/images/rnn-819b81cf9c86fc81270ede998895f8f0.png"},178:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/files/transformer-c74b64ef679c8637b6327fd6e7ab9ba4.png"},179:function(e,a,t){"use strict";t.r(a),a.default=t.p+"assets/images/transformer-c74b64ef679c8637b6327fd6e7ab9ba4.png"},76:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return s})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return o})),t.d(a,"default",(function(){return m}));var n=t(3),i=t(7),r=(t(0),t(106)),c=t(114),b=t(115),s={id:"design-principles",title:"Design Principles"},l={unversionedId:"design-principles",id:"design-principles",isDocsHomePage:!1,title:"Design Principles",description:"carefree-learn was designed to support most commonly used methods with carefree APIs. Moreover, carefree-learn was also designed with interface which is general enough, so that more sophisticated functionality can also be easily integrated in the future. This brings a tension in how to create abstractions in code, which is a challenge for us:",source:"@site/docs/design-principles.md",slug:"/design-principles",permalink:"/carefree-learn-doc/docs/design-principles",version:"current",lastUpdatedAt:1606713521,sidebar:"docs",previous:{title:"Introduction",permalink:"/carefree-learn-doc/docs/"},next:{title:"Optimizations",permalink:"/carefree-learn-doc/docs/optimizations"}},o=[{value:"Common Blocks",id:"common-blocks",children:[]},{value:"Configurations",id:"configurations",children:[]},{value:"Model",id:"model",children:[{value:"<code>pipe</code>",id:"pipe",children:[]},{value:"<code>transform</code>",id:"transform",children:[]},{value:"<code>extractor</code>",id:"extractor",children:[]},{value:"<code>head</code>",id:"head",children:[]},{value:"Examples",id:"examples",children:[]}]},{value:"Aggregator",id:"aggregator",children:[]},{value:"Trainer",id:"trainer",children:[]},{value:"Pipeline",id:"pipeline",children:[]},{value:"Registration",id:"registration",children:[]}],p={rightToc:o};function m(e){var a=e.components,s=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,s,{components:a,mdxType:"MDXLayout"}),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," was designed to support most commonly used methods with ",Object(r.b)("em",{parentName:"p"},"carefree")," APIs. Moreover, ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," was also designed with interface which is general enough, so that more sophisticated functionality can also be easily integrated in the future. This brings a tension in how to create abstractions in code, which is a challenge for us:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"On the one hand, it requires a reasonably high-level abstraction so that users can easily work around with it in a standard way, without having to worry too much about the details."),Object(r.b)("li",{parentName:"ul"},"On the other hand, it also needs to have a very thin abstraction to allow users to do (many) other things in new ways. Breaking existing abstractions and replacing them with new ones should be fairly easy.")),Object(r.b)("p",null,"In ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", there are five main design principles that address this tension together:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Share configurations with the help of ",Object(r.b)("inlineCode",{parentName:"li"},"Environment")," (see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"getting-started/configurations"}),Object(r.b)("inlineCode",{parentName:"a"},"Configurations")),")."),Object(r.b)("li",{parentName:"ul"},"Build some ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#common-blocks"}),Object(r.b)("inlineCode",{parentName:"a"},"Common Blocks"))," which shall be leveraged across different models."),Object(r.b)("li",{parentName:"ul"},"Divide ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," into three parts: ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#model"}),Object(r.b)("inlineCode",{parentName:"a"},"Model")),", ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#trainer"}),Object(r.b)("inlineCode",{parentName:"a"},"Trainer"))," and ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#pipeline"}),Object(r.b)("inlineCode",{parentName:"a"},"Pipeline")),"."),Object(r.b)("li",{parentName:"ul"},"Divide ",Object(r.b)("inlineCode",{parentName:"li"},"Model")," into three parts: ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#transform"}),Object(r.b)("inlineCode",{parentName:"a"},"transform")),", ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#extractor"}),Object(r.b)("inlineCode",{parentName:"a"},"extractor"))," and ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#head"}),Object(r.b)("inlineCode",{parentName:"a"},"head")),", which form a ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#pipe"}),Object(r.b)("inlineCode",{parentName:"a"},"pipe")),"."),Object(r.b)("li",{parentName:"ul"},"Implemente functions (",Object(r.b)("inlineCode",{parentName:"li"},"cflearn.register_*")," to be exact) to ensure flexibility and control on different modules and stuffs (see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#registration"}),Object(r.b)("inlineCode",{parentName:"a"},"Registration")),").")),Object(r.b)("p",null,"We will introduce the details in the following subsections."),Object(r.b)("h2",{id:"common-blocks"},"Common Blocks"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Source code: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/carefree0910/carefree-learn/blob/dev/cflearn/modules/blocks.py"}),"blocks.py"),".")),Object(r.b)("p",null,"Commonality is important for abstractions. When it comes to deep learning, it is not difficult to figure out the very common structure across all models: the ",Object(r.b)("inlineCode",{parentName:"p"},"Mapping")," Layers which is responsible for mapping data distrubution from one dimensional to another."),Object(r.b)("p",null,"Although some efforts have been made to replace the ",Object(r.b)("inlineCode",{parentName:"p"},"Mapping")," Layers (e.g. DNDF",Object(r.b)("sup",Object(n.a)({parentName:"p"},{id:"fnref-1"}),Object(r.b)("a",Object(n.a)({parentName:"sup"},{href:"#fn-1",className:"footnote-ref"}),"1")),"), it is undeniable that the ",Object(r.b)("inlineCode",{parentName:"p"},"Mapping")," Layers should be extracted as a stand-alone module before any other structures. But in ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", we should do more than that."),Object(r.b)("p",null,"Recall that ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," focuses on tabular datasets, which means ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," will use ",Object(r.b)("inlineCode",{parentName:"p"},"Mapping")," Layers in most cases (Unlike CNN or RNN which has Convolutional Blocks and RNNCell Blocks respectively). In this case, it is necessary to wrap multiple ",Object(r.b)("inlineCode",{parentName:"p"},"Mapping"),"s into one single Module - also well known as ",Object(r.b)("inlineCode",{parentName:"p"},"MLP")," - in ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),". So, in CNN we have ",Object(r.b)("inlineCode",{parentName:"p"},"Conv2D"),", in RNN we have ",Object(r.b)("inlineCode",{parentName:"p"},"LSTM"),", and in ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," we have ",Object(r.b)("inlineCode",{parentName:"p"},"MLP"),"."),Object(r.b)("h2",{id:"configurations"},"Configurations"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Source code: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/carefree0910/carefree-learn/blob/dev/cflearn/configs.py"}),"configs.py"),".")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," manages configurations in an elegant way so both ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"getting-started/configurations#specify-configurations"}),"specifying configurations")," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"developer-guides/customization#configs"}),"customizing configurations")," could be easy."),Object(r.b)("h2",{id:"model"},"Model"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Source code: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/carefree0910/carefree-learn/blob/ecdae9702456910b5075d1972de66a4f64ea733a/cflearn/models/base.py#L87"}),Object(r.b)("inlineCode",{parentName:"a"},"ModelBase")),".")),Object(r.b)("p",null,"In ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", a ",Object(r.b)("inlineCode",{parentName:"p"},"Model")," should implement the core algorithms."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It assumes that the input data in training process is already ",Object(r.b)("em",{parentName:"li"},"batched, processed, nice and clean"),", but not yet ",Object(r.b)("em",{parentName:"li"},"encoded"),".",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Fortunately, ",Object(r.b)("inlineCode",{parentName:"li"},"carefree-learn")," pre-defined some useful methods which can encode categorical columns easily and ",Object(r.b)("strong",{parentName:"li"},"EFFICIENTLY")," (see ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"optimizations"}),Object(r.b)("inlineCode",{parentName:"a"},"Optimizations"))," for more details)"))),Object(r.b)("li",{parentName:"ul"},"It does not care about how to train a model, it only focuses on how to make predictions with input, and how to calculate losses with them.")),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},Object(r.b)("inlineCode",{parentName:"p"},"Model")," is likely to define ",Object(r.b)("inlineCode",{parentName:"p"},"MLP")," blocks frequently, as explained in the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#common-blocks"}),"Common Blocks")," section."))),Object(r.b)("p",null,"One thing we would like to proudly announce is that ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," has made an elegant abstraction, namely ",Object(r.b)("inlineCode",{parentName:"p"},"pipe"),", which is suitable for most of the models which aim at solving tabular tasks:"),Object(r.b)("h3",{id:"pipe"},Object(r.b)("inlineCode",{parentName:"h3"},"pipe")),Object(r.b)("p",null,"Unlike unstructured datasets (CV, NLP, etc), it's hard to inject our prior knowledge into structured datasets because in most cases we simply use ",Object(r.b)("inlineCode",{parentName:"p"},"MLP")," to solve the problem. Researchers therefore mainly focused on how the improve the ",Object(r.b)("em",{parentName:"p"},"inputs")," and the ",Object(r.b)("em",{parentName:"p"},"connections")," of the traditional fully-connected ones. Some famous models, such as Wide-and-Deep",Object(r.b)("sup",Object(n.a)({parentName:"p"},{id:"fnref-2"}),Object(r.b)("a",Object(n.a)({parentName:"sup"},{href:"#fn-2",className:"footnote-ref"}),"2")),", Deep-and-Cross",Object(r.b)("sup",Object(n.a)({parentName:"p"},{id:"fnref-3"}),Object(r.b)("a",Object(n.a)({parentName:"sup"},{href:"#fn-3",className:"footnote-ref"}),"3")),", DeepFM",Object(r.b)("sup",Object(n.a)({parentName:"p"},{id:"fnref-4"}),Object(r.b)("a",Object(n.a)({parentName:"sup"},{href:"#fn-4",className:"footnote-ref"}),"4")),", share this common pattern. ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," therefore defined ",Object(r.b)("inlineCode",{parentName:"p"},"pipe"),", which corresponds to one of those ",Object(r.b)("em",{parentName:"p"},"branches")," which takes in all / part of the inputs, apply some ",Object(r.b)("inlineCode",{parentName:"p"},"transform"),", extract some features with ",Object(r.b)("inlineCode",{parentName:"p"},"extractor"),", and then feed the final network (",Object(r.b)("inlineCode",{parentName:"p"},"head"),") with these features. Here's an example (click to zoom in):"),Object(r.b)("p",null,Object(r.b)("a",{target:"_blank",href:t(154).default}," ",Object(r.b)("img",{alt:"Pipe",src:t(130).default})," ")),Object(r.b)("p",null,"In this model, we have ",Object(r.b)("span",Object(n.a)({parentName:"p"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("mn",{parentName:"mrow"},"3")),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"3")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),"3")))))," ",Object(r.b)("inlineCode",{parentName:"p"},"pipe"),"s. The first ",Object(r.b)("inlineCode",{parentName:"p"},"pipe")," takes in ",Object(r.b)("span",Object(n.a)({parentName:"p"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msub",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msub"},"x"),Object(r.b)("mn",{parentName:"msub"},"1")),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("msub",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msub"},"x"),Object(r.b)("mn",{parentName:"msub"},"2"))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"x_1, x_2")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"x"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t vlist-t2"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.30110799999999993em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"1")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-s"}),"\u200b")),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.15em"}}),Object(r.b)("span",{parentName:"span"})))))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.16666666666666666em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"x"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t vlist-t2"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.30110799999999993em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"2")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-s"}),"\u200b")),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.15em"}}),Object(r.b)("span",{parentName:"span"})))))))))),", the second one takes in ",Object(r.b)("span",Object(n.a)({parentName:"p"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msub",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msub"},"x"),Object(r.b)("mn",{parentName:"msub"},"3"))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"x_3")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.58056em",verticalAlign:"-0.15em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"x"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t vlist-t2"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.30110799999999993em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"3")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-s"}),"\u200b")),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.15em"}}),Object(r.b)("span",{parentName:"span"})))))))))),", and the third one takes in ",Object(r.b)("span",Object(n.a)({parentName:"p"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("msub",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msub"},"x"),Object(r.b)("mn",{parentName:"msub"},"3")),Object(r.b)("mo",Object(n.a)({parentName:"mrow"},{separator:"true"}),","),Object(r.b)("msub",{parentName:"mrow"},Object(r.b)("mi",{parentName:"msub"},"x"),Object(r.b)("mn",{parentName:"msub"},"4"))),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"x_3, x_4")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.625em",verticalAlign:"-0.19444em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"x"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t vlist-t2"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.30110799999999993em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"3")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-s"}),"\u200b")),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.15em"}}),Object(r.b)("span",{parentName:"span"})))))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mpunct"}),","),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.16666666666666666em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mathnormal"}),"x"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"msupsub"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-t vlist-t2"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.30110799999999993em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{style:{top:"-2.5500000000000003em",marginLeft:"0em",marginRight:"0.05em"}}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"pstrut",style:{height:"2.7em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"sizing reset-size6 size3 mtight"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord mtight"}),"4")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-s"}),"\u200b")),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist-r"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"vlist",style:{height:"0.15em"}}),Object(r.b)("span",{parentName:"span"})))))))))),". After each ",Object(r.b)("inlineCode",{parentName:"p"},"head")," finishes its own calculation, we'll go through a ",Object(r.b)("inlineCode",{parentName:"p"},"reduce")," operation (which is often a ",Object(r.b)("inlineCode",{parentName:"p"},"sum"),", see ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#aggregator"}),Object(r.b)("inlineCode",{parentName:"a"},"Aggregator"))," for more details) to get the final outputs."),Object(r.b)("p",null,"Here are some examples of how to represent different structures with ",Object(r.b)("inlineCode",{parentName:"p"},"pipe"),":"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"We'll use some concepts of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#transform"}),"transform"),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#extract"}),"extract")," and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#head"}),"head")," below. If you're intrested in some of the details, feel free to navigate to the corresponding section\ud83d\ude09"))),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"})))),"tip")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"If you are interested in how to implement these models in ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", you can jump to the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#examples"}),"Examples")," section first, and you might be amazed by how simple and clear it could be\ud83d\ude06"))),Object(r.b)(c.a,{groupId:"models",defaultValue:"linear",values:[{label:"Linear",value:"linear"},{label:"FCNN",value:"fcnn"},{label:"Wide & Deep",value:"wnd"},{label:"RNN",value:"rnn"},{label:"Transformer",value:"transformer"}],mdxType:"Tabs"},Object(r.b)(b.a,{value:"linear",mdxType:"TabItem"},Object(r.b)("p",null,"A ",Object(r.b)("inlineCode",{parentName:"p"},"Linear")," model represents a ",Object(r.b)("inlineCode",{parentName:"p"},"LinearRegression")," (regression tasks) or a ",Object(r.b)("inlineCode",{parentName:"p"},"LogisticRegression")," / ",Object(r.b)("inlineCode",{parentName:"p"},"SoftmaxRegression")," (classification tasks), so its representation is fairly easy because it only needs 1 ",Object(r.b)("inlineCode",{parentName:"p"},"pipe"),":"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"pipe Linear")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"transform")," would be a ",Object(r.b)("inlineCode",{parentName:"li"},"default")," transform."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"extractor")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"identity")," extractor."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"head")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"Linear")," head."))))),Object(r.b)(b.a,{value:"fcnn",mdxType:"TabItem"},Object(r.b)("p",null,"An ",Object(r.b)("inlineCode",{parentName:"p"},"FCNN")," model is simply a ",Object(r.b)("strong",{parentName:"p"},"F"),"ully ",Object(r.b)("strong",{parentName:"p"},"C"),"onnected ",Object(r.b)("strong",{parentName:"p"},"N"),"eural ",Object(r.b)("strong",{parentName:"p"},"N"),"etwork, and almost the same as ",Object(r.b)("inlineCode",{parentName:"p"},"Linear")," except its ",Object(r.b)("inlineCode",{parentName:"p"},"head")," switches to ",Object(r.b)("inlineCode",{parentName:"p"},"MLP"),":"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"pipe FCNN")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"transform")," would be a ",Object(r.b)("inlineCode",{parentName:"li"},"default")," transform."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"extractor")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"identity")," extractor."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"head")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"MLP")," head."))))),Object(r.b)(b.a,{value:"wnd",mdxType:"TabItem"},Object(r.b)("p",null,"A ",Object(r.b)("inlineCode",{parentName:"p"},"Wide & Deep")," model basically splits the inputs into two parts, then feed them to a ",Object(r.b)("em",{parentName:"p"},"wide")," model and a ",Object(r.b)("em",{parentName:"p"},"deep")," model respectively. Concretely, a ",Object(r.b)("em",{parentName:"p"},"wide")," model takes in categorical features with ",Object(r.b)("inlineCode",{parentName:"p"},"one_hot")," encoding, while a ",Object(r.b)("em",{parentName:"p"},"deep")," model takes in numerical features and categorical features with ",Object(r.b)("inlineCode",{parentName:"p"},"embedding")," encoding. Its representation will be a little more complicated because it requires 2 ",Object(r.b)("inlineCode",{parentName:"p"},"pipe"),"s:"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"pipe wide")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"transform")," would be a ",Object(r.b)("inlineCode",{parentName:"li"},"one_hot_only")," transform."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"extractor")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"identity")," extractor."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"head")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"Linear")," head.")))),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"pipe deep")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"transform")," would be a ",Object(r.b)("inlineCode",{parentName:"li"},"embedding")," transform."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"extractor")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"identity")," extractor."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"head")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"MLP")," head."))))),Object(r.b)(b.a,{value:"rnn",mdxType:"TabItem"},Object(r.b)("p",null,"An ",Object(r.b)("inlineCode",{parentName:"p"},"RNN")," model represents general ",Object(r.b)("strong",{parentName:"p"},"R"),"ecurrent ",Object(r.b)("strong",{parentName:"p"},"N"),"eural ",Object(r.b)("strong",{parentName:"p"},"N"),"etwork which is suitable for time series tasks. It differs from ",Object(r.b)("inlineCode",{parentName:"p"},"FCNN")," because it needs to extract the temporal information from the input data, so it should define a special ",Object(r.b)("inlineCode",{parentName:"p"},"extractor"),", instead of using an ",Object(r.b)("inlineCode",{parentName:"p"},"identity")," one:"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"pipe RNN")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"transform")," would be a ",Object(r.b)("inlineCode",{parentName:"li"},"default")," transform."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"extractor")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"rnn")," extractor."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"head")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"MLP")," head."))))),Object(r.b)(b.a,{value:"transformer",mdxType:"TabItem"},Object(r.b)("p",null,"A ",Object(r.b)("inlineCode",{parentName:"p"},"Transformer")," model represents the encoder part of the Transformer model which has been used broadly in NLP tasks. Its representation looks familiar with ",Object(r.b)("inlineCode",{parentName:"p"},"RNN"),"'s, except ",Object(r.b)("inlineCode",{parentName:"p"},"Transformer")," defines an ",Object(r.b)("inlineCode",{parentName:"p"},"extractor")," with self attention mechanism:"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"pipe Transformer")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"transform")," would be a ",Object(r.b)("inlineCode",{parentName:"li"},"default")," transform."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"extractor")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"transformer")," extractor."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"head")," would be an ",Object(r.b)("inlineCode",{parentName:"li"},"MLP")," head.")))))),Object(r.b)("h3",{id:"transform"},Object(r.b)("inlineCode",{parentName:"h3"},"transform")),Object(r.b)("p",null,"In ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", a ",Object(r.b)("inlineCode",{parentName:"p"},"transform")," refers to ",Object(r.b)("em",{parentName:"p"},"encodings")," that handle categorical features. Although there are plenty of encoding methods, we decide to stick to ",Object(r.b)("inlineCode",{parentName:"p"},"one_hot")," encoding and ",Object(r.b)("inlineCode",{parentName:"p"},"embedding")," encoding because their performances are already promising enough. Besides, flexibility often means reductions in performance, so sticking to ",Object(r.b)("inlineCode",{parentName:"p"},"one_hot")," & ",Object(r.b)("inlineCode",{parentName:"p"},"embedding")," means we can perform better optimizations on them (see ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"optimizations"}),Object(r.b)("inlineCode",{parentName:"a"},"Optimizations"))," for more details)."),Object(r.b)("p",null,"In this case, ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," pre-defined 7 types of ",Object(r.b)("inlineCode",{parentName:"p"},"transform"),", namely:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"default"),": use numerical features, ",Object(r.b)("inlineCode",{parentName:"li"},"one_hot")," & ",Object(r.b)("inlineCode",{parentName:"li"},"embedding"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"one_hot"),": use numerical features & ",Object(r.b)("inlineCode",{parentName:"li"},"one_hot"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"embedding"),": use numerical features & ",Object(r.b)("inlineCode",{parentName:"li"},"embedding"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"one_hot_only"),": use ",Object(r.b)("inlineCode",{parentName:"li"},"one_hot")," only."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"embedding_only"),": use ",Object(r.b)("inlineCode",{parentName:"li"},"embedding")," only."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"categorical_only"),": use ",Object(r.b)("inlineCode",{parentName:"li"},"one_hot")," & ",Object(r.b)("inlineCode",{parentName:"li"},"embedding"),"."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"numerical"),": use numerical features only.")),Object(r.b)("h3",{id:"extractor"},Object(r.b)("inlineCode",{parentName:"h3"},"extractor")),Object(r.b)("p",null,"In most cases ",Object(r.b)("inlineCode",{parentName:"p"},"extractor")," would simply be ",Object(r.b)("inlineCode",{parentName:"p"},"identity")," because we can hardly treat tabular datasets as vision datasets or natrual language datasets, since the latter ones often contain prior knowledges. However, there're one case where we often need such step, and that's when we need to resolve a time series task. In such cases, the ",Object(r.b)("inlineCode",{parentName:"p"},"rnn")," extractor / ",Object(r.b)("inlineCode",{parentName:"p"},"transformer")," extractor often outshines the ",Object(r.b)("inlineCode",{parentName:"p"},"identity")," extractor."),Object(r.b)("h3",{id:"head"},Object(r.b)("inlineCode",{parentName:"h3"},"head")),Object(r.b)("p",null,"The terminology ",Object(r.b)("inlineCode",{parentName:"p"},"head")," actually borrows from CV models where they call the last part of their model a ",Object(r.b)("inlineCode",{parentName:"p"},"head"),". We're feeling comfortable with this term because the last part of CV models are often ",Object(r.b)("inlineCode",{parentName:"p"},"Linear")," or ",Object(r.b)("inlineCode",{parentName:"p"},"MLP"),", which exactly matches our use cases."),Object(r.b)("h3",{id:"examples"},"Examples"),Object(r.b)("p",null,"In this section we'll show how ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," implements models under the ",Object(r.b)("inlineCode",{parentName:"p"},"pipe")," design, and will visualize these implementations with ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"getting-started/quick-start#visualizing"}),Object(r.b)("inlineCode",{parentName:"a"},"draw"))," API as well (click to zoom in):"),Object(r.b)(c.a,{groupId:"models",defaultValue:"linear",values:[{label:"Linear",value:"linear"},{label:"FCNN",value:"fcnn"},{label:"Wide & Deep",value:"wnd"},{label:"RNN",value:"rnn"},{label:"Transformer",value:"transformer"}],mdxType:"Tabs"},Object(r.b)(b.a,{value:"linear",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'@ModelBase.register_pipe("linear")\nclass LinearModel(ModelBase):\n    pass\n')),Object(r.b)("p",null,Object(r.b)("a",{target:"_blank",href:t(172).default}," ",Object(r.b)("img",{alt:"Linear",src:t(173).default})," "))),Object(r.b)(b.a,{value:"fcnn",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'@ModelBase.register_pipe("fcnn")\nclass FCNN(ModelBase):\n    pass\n')),Object(r.b)("p",null,Object(r.b)("a",{target:"_blank",href:t(174).default}," ",Object(r.b)("img",{alt:"FCNN",src:t(175).default})," "))),Object(r.b)(b.a,{value:"wnd",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'@ModelBase.register_pipe("fcnn", transform="embedding")\n@ModelBase.register_pipe("linear", transform="one_hot_only")\nclass WideAndDeep(ModelBase):\n    pass\n')),Object(r.b)("p",null,Object(r.b)("a",{target:"_blank",href:t(141).default}," ",Object(r.b)("img",{alt:"Wide and Deep",src:t(142).default})," "))),Object(r.b)(b.a,{value:"rnn",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'@ModelBase.register_pipe("rnn", head="fcnn")\nclass RNN(ModelBase):\n    pass\n')),Object(r.b)("p",null,Object(r.b)("a",{target:"_blank",href:t(176).default}," ",Object(r.b)("img",{alt:"RNN",src:t(177).default})," "))),Object(r.b)(b.a,{value:"transformer",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'@ModelBase.register_pipe("transformer", head="fcnn")\nclass Transformer(ModelBase):\n    pass\n')),Object(r.b)("p",null,Object(r.b)("a",{target:"_blank",href:t(178).default}," ",Object(r.b)("img",{alt:"Transformer",src:t(179).default})," ")))),Object(r.b)("p",null,"...That's right, simply register your ",Object(r.b)("inlineCode",{parentName:"p"},"transform"),", ",Object(r.b)("inlineCode",{parentName:"p"},"extractor")," and ",Object(r.b)("inlineCode",{parentName:"p"},"head"),", then ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," will handle the rest for you\ud83e\udd73"),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"For the Aggregator part, please refer to the next section."),Object(r.b)("li",{parentName:"ul"},"For detailed development guides, please refer to ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization"}),"Build Your Own Models"),".")))),Object(r.b)("h2",{id:"aggregator"},"Aggregator"),Object(r.b)("p",null,"You may have noticed that the visualizations shown above contain an ",Object(r.b)("inlineCode",{parentName:"p"},"Aggregator")," part. For models with only one ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#pipe"}),Object(r.b)("inlineCode",{parentName:"a"},"pipe")),", the ",Object(r.b)("inlineCode",{parentName:"p"},"Aggregator")," will just simply output its input. But for models with more than one ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#pipe"}),Object(r.b)("inlineCode",{parentName:"a"},"pipe"))," (e.g. the Wide & Deep model), ",Object(r.b)("inlineCode",{parentName:"p"},"Aggregator")," will be responsible to aggregate the outputs from different ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#pipe"}),Object(r.b)("inlineCode",{parentName:"a"},"pipe")),". Take this example again (click to zoom in):"),Object(r.b)("p",null,Object(r.b)("a",{target:"_blank",href:t(154).default}," ",Object(r.b)("img",{alt:"Pipe",src:t(130).default})," ")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"Aggregator")," actually needs to implement the ",Object(r.b)("inlineCode",{parentName:"p"},"Reduce")," part as shown at the right-most of the image. As we've mentioned, this is often a ",Object(r.b)("inlineCode",{parentName:"p"},"sum")," operation, which is exactly what ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," has implemented for us:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'@AggregatorBase.register("sum")\nclass Sum(AggregatorBase):\n    def reduce(self, outputs: tensor_dict_type, **kwargs: Any) -> tensor_dict_type:\n        values = list(outputs.values())\n        output = None\n        for value in values:\n            if value is None:\n                continue\n            if output is None:\n                output = value\n            else:\n                output = output + value\n        return {"predictions": output}\n')),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"For detailed development guides, please refer to ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"developer-guides/customization#customizing-new-aggregators"}),"Customizing New Aggregators"),"."))),Object(r.b)("h2",{id:"trainer"},"Trainer"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Source code: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/carefree0910/carefree-learn/blob/3fb03dbfc3e2b494f2ab03b9d8f07683fe30e7ef/cflearn/trainer.py#L451"}),Object(r.b)("inlineCode",{parentName:"a"},"Trainer")),".")),Object(r.b)("p",null,"In ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", a ",Object(r.b)("inlineCode",{parentName:"p"},"Trainer")," should implement the training parts, as listed below:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It assumes that the input data is already ",Object(r.b)("em",{parentName:"li"},"processed, nice and clean"),", but it should take care of getting input data into batches, because in real applications batching is essential for performance."),Object(r.b)("li",{parentName:"ul"},"It should take care of the training loop, which includes updating parameters with an optimizer, verbosing metrics, checkpointing, early stopping, logging, etc.")),Object(r.b)("h2",{id:"pipeline"},"Pipeline"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"Source code: ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/carefree0910/carefree-learn/blob/3fb03dbfc3e2b494f2ab03b9d8f07683fe30e7ef/cflearn/pipeline.py#L33"}),Object(r.b)("inlineCode",{parentName:"a"},"Pipeline")),".")),Object(r.b)("p",null,"In ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", a ",Object(r.b)("inlineCode",{parentName:"p"},"Pipeline")," should implement the high-level parts."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"It should not make any assumptions to the input data, it could already be ",Object(r.b)("em",{parentName:"li"},"nice and clean"),", but it could also be ",Object(r.b)("em",{parentName:"li"},"dirty and messy"),". Therefore, it needs to transform the original data into ",Object(r.b)("em",{parentName:"li"},"nice and clean")," data and then feed it to ",Object(r.b)("inlineCode",{parentName:"li"},"Trainer"),". The data transformations include (this part is mainly handled by ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/carefree0910/carefree-data"}),Object(r.b)("inlineCode",{parentName:"a"},"carefree-data")),", though):",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Imputation of missing values."),Object(r.b)("li",{parentName:"ul"},"Transforming string columns into categorical columns."),Object(r.b)("li",{parentName:"ul"},"Processing numerical columns."),Object(r.b)("li",{parentName:"ul"},"Processing label column (if needed)."))),Object(r.b)("li",{parentName:"ul"},"It should implement some algorithm-agnostic functions (e.g. ",Object(r.b)("inlineCode",{parentName:"li"},"predict"),", ",Object(r.b)("inlineCode",{parentName:"li"},"save"),", ",Object(r.b)("inlineCode",{parentName:"li"},"load"),", etc.).")),Object(r.b)("h2",{id:"registration"},"Registration"),Object(r.b)("p",null,"Registration in ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," means registering user-defined modules to ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn"),", so ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," can leverage these modules to resolve more specific tasks. In most cases, the registration stuffs are done by simply defining and updating many global ",Object(r.b)("inlineCode",{parentName:"p"},"dict"),"s."),Object(r.b)("p",null,"For example, ",Object(r.b)("inlineCode",{parentName:"p"},"carefree-learn")," defined some useful parameter initializations in ",Object(r.b)("inlineCode",{parentName:"p"},"cflearn.misc.toolkit.Initializer"),". If we want to use our own initialization methods, simply register it and then everything will be fine:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),'import torch\nimport cflearn\n\nfrom torch.nn import Parameter\n\n@cflearn.register_initializer("all_one")\ndef all_one(initializer_, parameter):\n    parameter.fill_(1.)\n\nparam = Parameter(torch.zeros(3))\nwith torch.no_grad():\n    cflearn.Initializer().initialize(param, "all_one")\nprint(param)  # tensor([1., 1., 1.], requires_grad=True)\n')),Object(r.b)("p",null,"Currently we mainly have 10 kinds of registrations in use:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization#constructing-existing-modules"}),Object(r.b)("inlineCode",{parentName:"a"},"register_model"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization#constructing-existing-modules"}),Object(r.b)("inlineCode",{parentName:"a"},"register_pipe"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization#customize-extractor"}),Object(r.b)("inlineCode",{parentName:"a"},"register_extractor"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization#customize-head"}),Object(r.b)("inlineCode",{parentName:"a"},"register_head"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization#customizing-new-aggregators"}),Object(r.b)("inlineCode",{parentName:"a"},"register_aggregator"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization#configs"}),Object(r.b)("inlineCode",{parentName:"a"},"register_config"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"developer-guides/customization#headconfigs"}),Object(r.b)("inlineCode",{parentName:"a"},"register_head_config"))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"register_metric")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"register_initializer")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"register_processor"))),Object(r.b)("div",{className:"footnotes"},Object(r.b)("hr",{parentName:"div"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",Object(n.a)({parentName:"ol"},{id:"fn-1"}),"Kontschieder P, Fiterau M, Criminisi A, et al. Deep neural decision forests","[C]","//Proceedings of the IEEE international conference on computer vision. 2015: 1467-1475. ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#fnref-1",className:"footnote-backref"}),"\u21a9")),Object(r.b)("li",Object(n.a)({parentName:"ol"},{id:"fn-2"}),"Cheng H T, Koc L, Harmsen J, et al. Wide & deep learning for recommender systems","[C]","//Proceedings of the 1st workshop on deep learning for recommender systems. 2016: 7-10. ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#fnref-2",className:"footnote-backref"}),"\u21a9")),Object(r.b)("li",Object(n.a)({parentName:"ol"},{id:"fn-3"}),"Wang, Ruoxi, et al. \u201cDeep & cross network for ad click predictions.\u201d Proceedings of the ADKDD\u201917. 2017. 1-7. ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#fnref-3",className:"footnote-backref"}),"\u21a9")),Object(r.b)("li",Object(n.a)({parentName:"ol"},{id:"fn-4"}),"Guo, Huifeng, et al. \u201cDeepfm: An end-to-end wide & deep learning framework for CTR prediction.\u201d ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"#fnref-4",className:"footnote-backref"}),"\u21a9")))))}m.isMDXComponent=!0}}]);