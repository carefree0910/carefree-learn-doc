(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{67:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),i=(n(0),n(97)),c={id:"Titanic",title:"Titanic"},o={unversionedId:"examples/Titanic",id:"examples/Titanic",isDocsHomePage:!1,title:"Titanic",description:"| Python source code | Jupyter Notebook | Task |",source:"@site/docs/examples/titanic.md",slug:"/examples/Titanic",permalink:"/carefree-learn-doc/docs/examples/Titanic",version:"current",lastUpdatedAt:1634995906,sidebar:"docs",previous:{title:"Iris",permalink:"/carefree-learn-doc/docs/examples/Iris"},next:{title:"MNIST",permalink:"/carefree-learn-doc/docs/examples/MNIST"}},l=[{value:"Configurations",id:"configurations",children:[]},{value:"Build Your Model",id:"build-your-model",children:[]},{value:"Evaluate Your Model",id:"evaluate-your-model",children:[]},{value:"Making Predictions",id:"making-predictions",children:[]},{value:"Submit Your Results",id:"submit-your-results",children:[]},{value:"Conclusions",id:"conclusions",children:[]}],s={rightToc:l};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Python source code"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Jupyter Notebook"),Object(i.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"Task"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("a",Object(a.a)({parentName:"td"},{href:"https://github.com/carefree0910/carefree-learn/blob/dev/examples/ml/titanic/run_titanic.py"}),"titanic.py")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),Object(i.b)("a",Object(a.a)({parentName:"td"},{href:"https://nbviewer.jupyter.org/github/carefree0910/carefree-learn/blob/dev/examples/ml/titanic/titanic.ipynb"}),"titanic.ipynb")),Object(i.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"Machine Learning \ud83d\udcc8")))),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Titanic")," is a famous playground competition hosted by Kaggle (",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.kaggle.com/c/titanic"}),"here"),"), so I'll simply copy-paste its brief description here:"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"This is the legendary Titanic ML competition \u2013 the best, first challenge for you to dive into ML competitions and familiarize yourself with how the Kaggle platform works."),Object(i.b)("p",{parentName:"blockquote"},"The competition is simple: use machine learning to create a model that predicts which passengers survived the Titanic shipwreck.")),Object(i.b)("p",null,"Here are the frist few rows of the ",Object(i.b)("inlineCode",{parentName:"p"},"train.csv")," of ",Object(i.b)("inlineCode",{parentName:"p"},"Titanic"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csv"}),'PassengerId,Survived,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked\n1,0,3,"Braund, Mr. Owen Harris",male,22,1,0,A/5 21171,7.25,,S\n2,1,1,"Cumings, Mrs. John Bradley (Florence Briggs Thayer)",female,38,1,0,PC 17599,71.2833,C85,C\n3,1,3,"Heikkinen, Miss. Laina",female,26,0,0,STON/O2. 3101282,7.925,,S\n')),Object(i.b)("p",null,"And the first few rows of the ",Object(i.b)("inlineCode",{parentName:"p"},"test.csv"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-csv"}),'PassengerId,Pclass,Name,Sex,Age,SibSp,Parch,Ticket,Fare,Cabin,Embarked\n892,3,"Kelly, Mr. James",male,34.5,0,0,330911,7.8292,,Q\n893,3,"Wilkes, Mrs. James (Ellen Needs)",female,47,1,0,363272,7,,S\n894,2,"Myles, Mr. Thomas Francis",male,62,0,0,240276,9.6875,,Q\n')),Object(i.b)("p",null,"What we need to do is to predict the ",Object(i.b)("inlineCode",{parentName:"p"},"Survived")," column in ",Object(i.b)("inlineCode",{parentName:"p"},"test.csv"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"# preparations\n\nimport torch\nimport cflearn\n\nimport numpy as np\n\n# for reproduction\nnp.random.seed(142857)\ntorch.manual_seed(142857)\n")),Object(i.b)("h2",{id:"configurations"},"Configurations"),Object(i.b)("p",null,"Since the target column is not the last column (which is the default setting of ",Object(i.b)("inlineCode",{parentName:"p"},"carefree-learn"),"), we need to manually configure it:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'kwargs = dict(carefree=True, cf_data_config={"label_name": "Survived"})\n')),Object(i.b)("p",null,"And you're all set! Notice that only the ",Object(i.b)("inlineCode",{parentName:"p"},"label_name")," needs to be provided, and ",Object(i.b)("inlineCode",{parentName:"p"},"carefree-learn")," will find out the corresponding target column for you\ud83d\ude09"),Object(i.b)("h2",{id:"build-your-model"},"Build Your Model"),Object(i.b)("p",null,"For instance, we'll use the famous ",Object(i.b)("inlineCode",{parentName:"p"},"Wide & Deep")," model. Unlike other libraries, ",Object(i.b)("inlineCode",{parentName:"p"},"carefree-learn")," supports ",Object(i.b)("em",{parentName:"p"},"file-in"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'m = cflearn.api.fit_ml("train.csv", core_name="wnd", **kwargs)\n')),Object(i.b)("h2",{id:"evaluate-your-model"},"Evaluate Your Model"),Object(i.b)("p",null,"After building the model, we can directly evaluate our model with a file (",Object(i.b)("em",{parentName:"p"},"file-out"),"):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'# instantiate an `MLInferenceData` instance\nidata = cflearn.MLInferenceData("train.csv")\n# `contains_labels` is set to True because we\'re evaluating on training set\ncflearn.ml.evaluate(idata, metrics=["acc", "auc"], pipelines=m, contains_labels=True)\n')),Object(i.b)("p",null,"Then you will see something like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),">  [ info ] Results\n================================================================================================================================\n|        metrics         |                       acc                        |                       auc                        |\n--------------------------------------------------------------------------------------------------------------------------------\n|                        |      mean      |      std       |     score      |      mean      |      std       |     score      |\n--------------------------------------------------------------------------------------------------------------------------------\n|          wnd           |    0.857463    |    0.000000    |    0.857463    |    0.892550    |    0.000000    |    0.892550    |\n================================================================================================================================\n")),Object(i.b)("p",null,"Our model achieved an accuracy of ",Object(i.b)("inlineCode",{parentName:"p"},"0.857463"),", not bad!"),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"Note that this performance may vary and is not exactly the ",Object(i.b)("em",{parentName:"p"},"training")," performance, because ",Object(i.b)("inlineCode",{parentName:"p"},"carefree-learn")," will automatically split out the cross validation dataset for you."))),Object(i.b)("h2",{id:"making-predictions"},"Making Predictions"),Object(i.b)("p",null,"Again, we can directly make predictions with a file (",Object(i.b)("em",{parentName:"p"},"file-out"),"):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'# instantiate an `MLInferenceData` instance\nidata = cflearn.MLInferenceData("test.csv")\n# `contains_labels` is set to False because `test.csv` does not contain labels\npredictions = m.predict(idata, make_loader_kwargs={"contains_labels": False})\n')),Object(i.b)("h2",{id:"submit-your-results"},"Submit Your Results"),Object(i.b)("p",null,"If you reached here, we have actually already completed this ",Object(i.b)("inlineCode",{parentName:"p"},"Titanic")," task! All we need to do is to convert the ",Object(i.b)("inlineCode",{parentName:"p"},"predictions")," into a submission file:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'def write_submissions(name: str, predictions_: np.ndarray) -> None:\n    with open("test.csv", "r") as f:\n        f.readline()\n        id_list = [line.strip().split(",")[0] for line in f]\n    with open(name, "w") as f:\n        f.write("PassengerId,Survived\\n")\n        for test_id, prediction in zip(id_list, predictions_):\n            f.write(f"{test_id},{prediction}\\n")\n\npredictions = predictions[cflearn.PREDICTIONS_KEY]\nwrite_submissions("submissions.csv", predictions.argmax(1))\n')),Object(i.b)("p",null,"After running these codes, a ",Object(i.b)("inlineCode",{parentName:"p"},"submissions.csv")," will be generated and you can submit it to Kaggle directly. In my personal experience, it could achieve 0.77272."),Object(i.b)("h2",{id:"conclusions"},"Conclusions"),Object(i.b)("p",null,"Since ",Object(i.b)("inlineCode",{parentName:"p"},"Titanic")," is just a small toy dataset, using Neural Network to solve it might actually 'over-killed' (or, overfit) it, and that's why we decided to conclude here instead of introducing more fancy techniques (e.g. ensemble, AutoML, etc.). We hope that this small example can help you quickly walk through some basic concepts in ",Object(i.b)("inlineCode",{parentName:"p"},"carefre-learn"),", as well as help you leverage ",Object(i.b)("inlineCode",{parentName:"p"},"carefree-learn")," in your own tasks!"))}b.isMDXComponent=!0},97:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,m=p["".concat(c,".").concat(u)]||p[u]||d[u]||i;return n?r.a.createElement(m,o(o({ref:t},s),{},{components:n})):r.a.createElement(m,o({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var s=2;s<i;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);